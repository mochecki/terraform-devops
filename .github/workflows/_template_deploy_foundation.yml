name: _template_deploy_foundation

on:
  workflow_dispatch:
    inputs:
      environment:
        required: true
        type: string
      tfvar_file:
        required: true
        type: string
      resource_group:
        required: true
        type: string
      storage_account:
        required: true
        type: string
      container_name:
        required: true
        type: string
      state_file:
        required: true
        type: string

jobs:
  terraform-apply:
    runs-on: ubuntu-latest

    environment: ${{ inputs.environment }}

    env: 
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

    defaults:
      run:
        working-directory: ./foundation

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.2.1
          terraform_wrapper: false
      
      - name: Terraform Init
        id: init
        run: |
          terraform init \
            -backend-config="resource_group_name=${{ inputs.resource_group }}" \
            -backend-config="storage_account_name=${{ inputs.storage_account }}" \
            -backend-config="container_name=${{ inputs.container_name }}" \
            -backend-config="key=${{ inputs.state_file }}"

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -out output.tfplan -var-file="${{ inputs.tfvar_file }}"
      
      - name: Terraform Apply
        id: apply
        run: terraform apply output.tfplan
