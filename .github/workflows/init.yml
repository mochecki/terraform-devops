name: Deploy TF state

on:
  workflow_dispatch:
    inputs:
      environment:
        description: Target environment
        default: 'test'
        required: true

env:
  RESOURCE_LOCATION: 'West Europe'

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    environment: ${{ github.event.inputs.environment }}

    env: 
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      RESOURCE_GROUP_NAME: 'RG-TF-STATE-001-DEV'
      STORAGE_ACCOUNT_NAME: 'stmoclocaldev01'

    steps:
      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.ARM_CLIENT_ID }}","clientSecret":"${{ secrets.ARM_CLIENT_SECRET }}","subscriptionId":"${{ secrets.ARM_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.ARM_TENANT_ID }}"}'
      
      - name: 'Run az commands'
        run: |

          echo "*** Check if Resource Group $RESOURCE_GROUP_NAME exists"
          if [ $(az group exists --name $RESOURCE_GROUP_NAME) = false ]; then 
            echo "*** WARN! Resource Group $RESOURCE_GROUP_NAME does not exist. Creating..."
            az group create --name $RESOURCE_GROUP_NAME --location "$RESOURCE_LOCATION" 
          else
            echo "*** Ok"
          fi

          echo "*** Check if Storage Account $STORAGE_ACCOUNT_NAME exists"
          if [[ $(az storage account list --resource-group $RESOURCE_GROUP_NAME --query "[?name=='$STORAGE_ACCOUNT_NAME'] | length(@)") == 0 ]]; then
            echo "*** WARN! Storage account $STORAGE_ACCOUNT_NAME does not exist. Creating..."
            az storage account create --name $STORAGE_ACCOUNT_NAME \
                          --resource-group $RESOURCE_GROUP_NAME \
                          --https-only true \
                          --sku Standard_LRS \
                          --min-tls-version TLS1_2
          else
            echo "*** Ok"
          fi
